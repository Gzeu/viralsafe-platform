name: Deploy Frontend to Vercel

on:
  push:
    branches: [main, develop]
    paths: ['frontend/**']
  pull_request:
    branches: [main]
    paths: ['frontend/**']

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package.json
          
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
        
      - name: Run linter
        working-directory: ./frontend
        run: npm run lint
        
      - name: Run tests
        working-directory: ./frontend
        run: npm run test
        
      - name: Type check
        working-directory: ./frontend
        run: npm run type-check

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package.json
          
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
        
      - name: Build application
        working-directory: ./frontend
        run: npm run build
        env:
          # Web3 Configuration
          NEXT_PUBLIC_CHAIN_ID: ${{ github.ref == 'refs/heads/main' && '56' || '97' }}
          NEXT_PUBLIC_RPC_URL: ${{ secrets.RPC_URL }}
          NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
          NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.WALLETCONNECT_PROJECT_ID }}
          
          # Contract Addresses
          NEXT_PUBLIC_SAFE_TOKEN_ADDRESS: ${{ secrets.SAFE_TOKEN_ADDRESS }}
          NEXT_PUBLIC_VIRAL_NFT_ADDRESS: ${{ secrets.VIRAL_NFT_ADDRESS }}
          NEXT_PUBLIC_MARKETPLACE_ADDRESS: ${{ secrets.MARKETPLACE_ADDRESS }}
          
          # IPFS & Storage
          NEXT_PUBLIC_PINATA_JWT: ${{ secrets.PINATA_JWT }}
          NEXT_PUBLIC_PINATA_GATEWAY: "https://gateway.pinata.cloud/ipfs/"
          
          # API Configuration
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.API_BASE_URL }}
          NEXT_PUBLIC_WEBSOCKET_URL: ${{ secrets.WEBSOCKET_URL }}
          
          # TikTok Integration
          NEXT_PUBLIC_TIKTOK_CLIENT_KEY: ${{ secrets.TIKTOK_CLIENT_KEY }}
          
          # Analytics
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
          
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
          
      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha
            });
            
            if (deployment && deployment.length > 0) {
              const previewUrl = `https://${deployment[0].environment}.vercel.app`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🚀 **Frontend deployed successfully!**\n\n📱 **Preview URL**: ${previewUrl}\n\n🔍 **Changes in this PR**:\n- Frontend updates deployed to staging\n- Ready for review and testing`
              });
            }

  lighthouse-audit:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true